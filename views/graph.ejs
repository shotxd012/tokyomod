<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Performance Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #333;
        }
        canvas {
            max-width: 100%;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Performance Graph</h1>
        <canvas id="performanceChart"></canvas>
    </div>

    <script>
        // Parse the graph data passed from the server
        const graphData = <%- JSON.stringify(graphData) %>;

        // Extract labels (formatted time) and data for the chart
        const labels = graphData.values.map(entry => entry[0]); // Formatted time
        const playersOnline = graphData.values.map(entry => entry[1]);
        const tps = graphData.values.map(entry => entry[2]);
        const cpu = graphData.values.map(entry => entry[3]);
        const ram = graphData.values.map(entry => entry[4]);
        const entities = graphData.values.map(entry => entry[5]);
        const chunks = graphData.values.map(entry => entry[6]);
        const disk = graphData.values.map(entry => entry[7]);

        // Create the chart
        const ctx = document.getElementById('performanceChart').getContext('2d');
        const performanceChart = new Chart(ctx, {
            type: 'line', // Use a line chart
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Players Online',
                        data: playersOnline,
                        borderColor: graphData.colors.playersOnline,
                        backgroundColor: graphData.colors.playersOnline + '20',
                        borderWidth: 2,
                        fill: true,
                    },
                    {
                        label: 'TPS',
                        data: tps,
                        borderColor: graphData.colors.high,
                        backgroundColor: graphData.colors.high + '20',
                        borderWidth: 2,
                        fill: true,
                    },
                    {
                        label: 'CPU',
                        data: cpu,
                        borderColor: graphData.colors.cpu,
                        backgroundColor: graphData.colors.cpu + '20',
                        borderWidth: 2,
                        fill: true,
                    },
                    {
                        label: 'RAM',
                        data: ram,
                        borderColor: graphData.colors.ram,
                        backgroundColor: graphData.colors.ram + '20',
                        borderWidth: 2,
                        fill: true,
                    },
                    {
                        label: 'Entities',
                        data: entities,
                        borderColor: graphData.colors.entities,
                        backgroundColor: graphData.colors.entities + '20',
                        borderWidth: 2,
                        fill: true,
                    },
                    {
                        label: 'Chunks',
                        data: chunks,
                        borderColor: graphData.colors.chunks,
                        backgroundColor: graphData.colors.chunks + '20',
                        borderWidth: 2,
                        fill: true,
                    },
                    {
                        label: 'Disk',
                        data: disk,
                        borderColor: graphData.colors.low,
                        backgroundColor: graphData.colors.low + '20',
                        borderWidth: 2,
                        fill: true,
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Optimized Performance Over Time'
                    }
                },
                scales: {
                    x: {
                        display: true,
                        title: {
                            display: true,
                            text: 'Time'
                        }
                    },
                    y: {
                        display: true,
                        title: {
                            display: true,
                            text: 'Performance Value'
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>
